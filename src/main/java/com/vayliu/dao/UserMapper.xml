<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vayliu.dao.UserMapper">

    <insert id="insertUser" parameterType="User"
            keyProperty="id" useGeneratedKeys="true">
        insert into user(username, password, gender, permission, is_deleted, email, name, address, area, home_phone,
                         role_id, tel_phone, zip_code, created_at, updated_at, token)
        values (#{username}, #{password}, #{gender}, #{permission}, #{is_deleted}, #{email}, #{name}, #{}, #{address},
                #{area}, #{home_phone}, #{role_id}, #{tel_phone}, #{zip_code}, #{created_at}, #{updated_at}, #{token})
    </insert>

    <select id="findUserById" parameterType="long" resultMap="user">
        select user.*,
               role.id            as role_id,
               role.name          as role_name,
               permission.id      as permission_id,
               permission.name    as permission_name,
               permission.role_id as p_role_id
        from user
                 left join role
                           on USER.role_id = role.id
                 left join permission
                           on permission.role_id = role.id
        where USER.id = #{id}
          and USER.is_deleted = 0
    </select>

    <select id="findUserByUserName" parameterType="String" resultMap="user">
        select user.*,
               role.id            as role_id,
               role.name          as role_name,
               permission.id      as permission_id,
               permission.name    as permission_name,
               permission.role_id as p_role_id
        from user
                 left join role
                           on user.role_id = role.id
                 left join permission
                           on permission.role_id = role.id
        where user.username = #{username}
    and user.is_deleted = 0
    </select>

    <update id="updateUser" parameterType="User">
        update user
        set gender    = #{gender},
            name      = #{name},
            area      = #{area},
            address   = #{address},
            tel_phone = #{telPhone},
            zip_code  = #{zipCode},
            email     = #{email}
        where id = #{id}
    </update>

    <select id="getTokenById" parameterType="long" resultType="String">
        select user.token
        from user
        where user.id = #{id}
    </select>

    <select id="getTokenByUsername" parameterType="String" resultType="String">
        select user.token
        from user
        where user.username = #{username}
    </select>

    <update id="updateTokenById" parameterType="long">
        update user
        set token = #{token}
        where id = #{id}
    </update>

</mapper>